name: DEPLOY

on:
  push:
    branches: [ '**' ]
    tags-ignore: [ '**' ]

jobs:

  build:
    if: contains(github.event.head_commit.message, 'deploy+')
    strategy:
      matrix:
        container: [ "ubuntu:16.04", "ubuntu:17.04", "ubuntu:18.04", "ubuntu:19.04", "ubuntu:20.04", "debian:9", "debian:10", "fedora:29", "fedora:30", "fedora:31", "archlinux:latest" ]
    runs-on: "ubuntu-latest"
    container:
      image: ${{ matrix.container }}
      env:
        DIST: ${{ matrix.container }}
    env:
      DEPLOY: ${{ true }}
    steps:
      - name: checkout-source
        uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: run-builder
        shell: bash
        run: ./tools/build.sh
      - name: upload-artifacts
        uses: actions/upload-artifact@v1
        with:
          name: package-archives
          path: artifact

  deploy:
    needs: build
    runs-on: "ubuntu-latest"
    container:
      image: "archlinux:latest"
    env:
      BINTRAY_USER: ${{ github.actor }}
      BINTRAY_APIKEY: ${{ secrets.BINTRAY_APIKEY }}
      BINTRAY_GPG_DATA: ${{ secrets.GPG_DATA }}
      BINTRAY_GPG_ID: ${{ secrets.GPG_ID }}
      JFROG_CLI_OFFER_CONFIG: false
    steps:
      - name: checkout-source
        uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: install-jfrog-cli
        uses: jfrog/setup-jfrog-cli@v1
      - name: download-artifacts
        uses: actions/download-artifact@v1
        with:
          name: package-archives
          path: artifact
      - name: bintray-publish
        shell: bash
        run: ./tools/publish.sh

  release:
    needs: deploy
    runs-on: "ubuntu-latest"
    steps:
      - name: checkout-source
        uses: actions/checkout@v1
      - name: get-version
        id: get_version
        shell: bash
        run: |
          RELEASE_VERSION=$(cat version.txt | head -n1)
          echo ::set-output name=RELEASE_VERSION::$RELEASE_VERSION
      - name: download-artifacts
        uses: actions/download-artifact@v1
        with:
          name: package-archives
          path: artifact
      - name: create-release-bundle
        shell: bash
        run: |
          zip -j9 installers.zip artifact/*
      - name: create-release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.RELEASE_VERSION }}
          release_name: ${{ steps.get_version.outputs.RELEASE_VERSION }}
          body: |
            [![Github Releases (by Release)](https://img.shields.io/github/downloads/${{ github.repository }}/${{ steps.get_version.outputs.RELEASE_VERSION }}/total.svg)]()
            ### Changes in this release:
            - ...
          draft: false
      - name: upload-release-asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: installers.zip
          asset_name: installers.zip
          asset_content_type: application/zip
